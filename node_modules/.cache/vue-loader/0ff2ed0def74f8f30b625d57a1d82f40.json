{"remainingRequest":"/home/artanis/workspace/proj-covid19/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/artanis/workspace/proj-covid19/src/views/CountryDetailsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/artanis/workspace/proj-covid19/src/views/CountryDetailsView.vue","mtime":1607285076563},{"path":"/home/artanis/workspace/proj-covid19/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/artanis/workspace/proj-covid19/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/artanis/workspace/proj-covid19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/artanis/workspace/proj-covid19/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCglpbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucywgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnCglpbXBvcnQgeyBlcnJvckhhbmRsZXIgfSBmcm9tICdAL21peGlucy9FcnJvckhhbmRsZXInCglpbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gJ0AvdXRpbHMnCglpbXBvcnQgTGlzdEl0ZW1Db21wb25lbnQgZnJvbSAnQC9jb21wb25lbnRzL0xpc3RJdGVtQ29tcG9uZW50JwoJaW1wb3J0IE1vZGFsQ29tcG9uZW50IGZyb20gJ0AvY29tcG9uZW50cy9Nb2RhbENvbXBvbmVudCcKCWltcG9ydCBUYWJsZUNvbXBvbmVudCBmcm9tICdAL2NvbXBvbmVudHMvVGFibGVDb21wb25lbnQnCgoJZXhwb3J0IGRlZmF1bHQgewoJCW5hbWU6ICdjb3VudHJ5LWRldGFpbHMtdmlldycsCgkJbWl4aW5zOiBbZXJyb3JIYW5kbGVyXSwKCQljb21wb25lbnRzOiB7CgkJCUxpc3RJdGVtQ29tcG9uZW50LAoJCQlNb2RhbENvbXBvbmVudCwKCQkJVGFibGVDb21wb25lbnQKCQl9LAoJCWRhdGEgKCkgewoJCQlyZXR1cm4gewoJCQkJbW9kYWxJZDogJ2NvdW50cnktaGlzdG9yeS1kYXRhJywKCQkJCWhlYWRlcnM6IFsKCQkJCQl7IHRleHQ6ICdEYXRlJywgdmFsdWU6ICdkYXRlJywgc29ydGFibGU6IGZhbHNlIH0sCgkJCQkJeyB0ZXh0OiAnQ29uZnJpbWVkIGNhc2VzJywgdmFsdWU6ICdjb25maXJtZWQnfSwKCQkJCQl7IHRleHQ6ICdEZWF0aHMnLCB2YWx1ZTogJ2RlYXRocyd9LAoJCQkJCXsgdGV4dDogJ1JlY292ZXJlZCcsIHZhbHVlOiAncmVjb3ZlcmVkJ30KCQkJCV0KCQkJfQoJCX0sCgkJcHJvcHM6IHsKCQkJaWQ6IHsKCQkJCXR5cGU6IFN0cmluZywKCQkJCXJlcXVpcmVkOiB0cnVlCgkJCX0KCQl9LAoJCWNvbXB1dGVkOiB7CgkJCS4uLm1hcFN0YXRlKHsKCQkJCWNvdW50cmllczogc3RhdGUgPT4gc3RhdGUuY292aWQxOU1vZHVsZS5jb3VudHJpZXMKCQkJfSksCgkJCS4uLm1hcEdldHRlcnMoWwoJCQkJJ2dldENvdW50cnlGb3JJZCcKCQkJXSksCgkJCWNvdW50cnkgKCkgewoJCQkJcmV0dXJuIHRoaXMuZ2V0Q291bnRyeUZvcklkKHRoaXMuaWQpIHx8IG51bGwKCQkJfQoJCX0sCgkJbWV0aG9kczogewoJCQkuLi5tYXBBY3Rpb25zKFsKCQkJCSdnZXRDb3ZpZDE5U3VtbWFyeScsCgkJCQknZ2V0SGlzdG9yeURhdGEnCgkJCV0pLAoJCQlnZXRJbml0aWFsRGF0YSAoKSB7CgkJCQl0aGlzLmdldENvdmlkMTlTdW1tYXJ5KCkuY2F0Y2goKGVycikgPT4gewoJCQkJCXRoaXMuaGFuZGxlRXJyb3IoZXJyKQoJCQkJfSkKCQkJfSwKCQkJb3Blbkhpc3RvcnlEYXRhUG9wdXAgKCkgewoJCQkJdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAnY291bnRyeURldGFpbHMnLCBxdWVyeTogeyBoaXN0b3J5OiB0cnVlIH19KQoJCQl9LAoJCQlsb2FkTW9kYWwgKCkgewoJCQkJLy8gZW5hYmxlZCByZXN0ZnVsIGxpbmtzIC0gdW5pcXVlIHVybHMgaWYgdGhlIG1vZGFsIGlzIG9wZW5lZAoJCQkJaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5Lmhpc3RvcnkpIHsKCQkJCQl0aGlzLmxvYWRIaXN0b3J5RGF0YU1vZGFsKCkKCQkJCX0KCQkJfSwKCQkJbG9hZEhpc3RvcnlEYXRhTW9kYWwgKCkgewkJCQkKCQkJCXRoaXMuZ2V0SGlzdG9yeURhdGEodGhpcy5pZCkudGhlbigoKSA9PiB7CgkJCQkJdGhpcy5vcGVuTW9kYWwodGhpcy5tb2RhbElkKQoJCQkJfSkuY2F0Y2goKGVycikgPT4gewoJCQkJCXRoaXMuaGFuZGxlRXJyb3IoZXJyKQoJCQkJfSkKCQkJfSwKICAgICAgICAgICAgb3Blbk1vZGFsIChpZCkgewogICAgICAgICAgICAgICAgRXZlbnRCdXMuJGVtaXQoYG1vZGFsLW9wZW4tJHtpZH1gKQogICAgICAgICAgICB9LAoJCQljbG9zZU1vZGFsIChpZCkgewoJCQkJRXZlbnRCdXMuJGVtaXQoYG1vZGFsLWNsb3NlLSR7aWR9YCkKCQkJCXRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ2NvdW50cnlEZXRhaWxzJ30pCiAgICAgICAgICAgIH0KCQl9LAoJCXdhdGNoOiB7CgkJCSRyb3V0ZSAodG8sIGZyb20pIHsKCQkJCXRoaXMubG9hZE1vZGFsKCkKCQkJfQoJCX0sCQkKCQljcmVhdGVkICgpIHsKCQkJLy8gZ2V0IHRoZSBjb3VudHJpZXMgb25seSBpZiBub3QgcmV0cmlldmVkIGFscmVhZHkKCQkJaWYgKCF0aGlzLmNvdW50cmllcy5sZW5ndGgpIHsKCQkJCXRoaXMuZ2V0SW5pdGlhbERhdGEoKQoJCQl9CgkJfSwKCQltb3VudGVkICgpIHsKCQkJdGhpcy5sb2FkTW9kYWwoKQoJCX0KCX0K"},{"version":3,"sources":["CountryDetailsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CountryDetailsView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container fluid fill-height class=\"text-center\">\n\t<v-row >\n\t\t<v-col md=\"6\" offset-md=\"3\" v-if=\"country\">\n\t\t\t<h3 class=\"mb-5\">Detailed information for {{ country.name.toUpperCase() }}</h3>\n\t\t\t<v-card elevation=\"5\">\n\t\t\t\t<!-- New cases -->\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col cols=\"12\" class=\"text-left ml-6\"><b>New cases</b></v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'All new cases'\" :content=\"country.newStats.confirmed\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'Change in active cases'\" :color=\"blueColor\" :content=\"country.newStats.active\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'New deaths'\" :color=\"redColor\" :content=\"country.newStats.deaths\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'Newly recovered'\" :color=\"greenColor\" :content=\"country.newStats.recovered\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t<!-- Total cases -->\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col cols=\"12\" class=\"text-left ml-6\"><b>Total cases</b></v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'All cases'\" :content=\"country.totalStats.confirmed\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'All active cases'\" :color=\"blueColor\" :content=\"country.totalStats.active\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'Deaths'\" :color=\"redColor\" :content=\"country.totalStats.deaths\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col cols=\"12\" md=\"3\">\n\t\t\t\t\t\t<list-item-component :title=\"'Recovered'\" :color=\"greenColor\" :content=\"country.totalStats.recovered\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t<!-- Actions -->\n\t\t\t\t<v-card-actions class=\"pa-3\">\n\t\t\t\t\t<v-btn text large\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t@click=\"openHistoryDataPopup()\">\n\t\t\t\t\t\tLoad history data\n\t\t\t\t\t</v-btn>\n\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t<v-btn text large\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t@click=\"redirectTo('countryList')\">\n\t\t\t\t\t\tGo back\n\t\t\t\t\t</v-btn>\n\t\t\t\t</v-card-actions>\n\t\t\t\t<!-- Modal that shows on top of it -->\n\t\t\t\t<modal-component :id=\"modalId\">\n\t\t\t\t\t<template v-slot:title>\n\t\t\t\t\t\tHistory data for {{ country.name.toUpperCase() }}\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:content>\n\t\t\t\t\t\t<table-component\n\t\t\t\t\t\t\t:headers=\"headers\"\n\t\t\t\t\t\t\t:items=\"country.historyData\">\n\t\t\t\t\t\t</table-component>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:actions>\n\t\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t\t<v-btn text color=\"primary darken-1\"\n\t\t\t\t\t\t\t@click=\"closeModal(modalId)\">\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t</template>\n\t\t\t\t</modal-component>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n  </v-container>\n</template>\n\n<script>\n\timport { mapState, mapActions, mapGetters } from 'vuex'\n\timport { errorHandler } from '@/mixins/ErrorHandler'\n\timport { EventBus } from '@/utils'\n\timport ListItemComponent from '@/components/ListItemComponent'\n\timport ModalComponent from '@/components/ModalComponent'\n\timport TableComponent from '@/components/TableComponent'\n\n\texport default {\n\t\tname: 'country-details-view',\n\t\tmixins: [errorHandler],\n\t\tcomponents: {\n\t\t\tListItemComponent,\n\t\t\tModalComponent,\n\t\t\tTableComponent\n\t\t},\n\t\tdata () {\n\t\t\treturn {\n\t\t\t\tmodalId: 'country-history-data',\n\t\t\t\theaders: [\n\t\t\t\t\t{ text: 'Date', value: 'date', sortable: false },\n\t\t\t\t\t{ text: 'Confrimed cases', value: 'confirmed'},\n\t\t\t\t\t{ text: 'Deaths', value: 'deaths'},\n\t\t\t\t\t{ text: 'Recovered', value: 'recovered'}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\tprops: {\n\t\t\tid: {\n\t\t\t\ttype: String,\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\t...mapState({\n\t\t\t\tcountries: state => state.covid19Module.countries\n\t\t\t}),\n\t\t\t...mapGetters([\n\t\t\t\t'getCountryForId'\n\t\t\t]),\n\t\t\tcountry () {\n\t\t\t\treturn this.getCountryForId(this.id) || null\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\t...mapActions([\n\t\t\t\t'getCovid19Summary',\n\t\t\t\t'getHistoryData'\n\t\t\t]),\n\t\t\tgetInitialData () {\n\t\t\t\tthis.getCovid19Summary().catch((err) => {\n\t\t\t\t\tthis.handleError(err)\n\t\t\t\t})\n\t\t\t},\n\t\t\topenHistoryDataPopup () {\n\t\t\t\tthis.$router.push({ name: 'countryDetails', query: { history: true }})\n\t\t\t},\n\t\t\tloadModal () {\n\t\t\t\t// enabled restful links - unique urls if the modal is opened\n\t\t\t\tif (this.$route.query.history) {\n\t\t\t\t\tthis.loadHistoryDataModal()\n\t\t\t\t}\n\t\t\t},\n\t\t\tloadHistoryDataModal () {\t\t\t\t\n\t\t\t\tthis.getHistoryData(this.id).then(() => {\n\t\t\t\t\tthis.openModal(this.modalId)\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tthis.handleError(err)\n\t\t\t\t})\n\t\t\t},\n            openModal (id) {\n                EventBus.$emit(`modal-open-${id}`)\n            },\n\t\t\tcloseModal (id) {\n\t\t\t\tEventBus.$emit(`modal-close-${id}`)\n\t\t\t\tthis.$router.push({ name: 'countryDetails'})\n            }\n\t\t},\n\t\twatch: {\n\t\t\t$route (to, from) {\n\t\t\t\tthis.loadModal()\n\t\t\t}\n\t\t},\t\t\n\t\tcreated () {\n\t\t\t// get the countries only if not retrieved already\n\t\t\tif (!this.countries.length) {\n\t\t\t\tthis.getInitialData()\n\t\t\t}\n\t\t},\n\t\tmounted () {\n\t\t\tthis.loadModal()\n\t\t}\n\t}\n</script>\n\n<style lang=\"sass\" scoped>\n</style>\n"]}]}