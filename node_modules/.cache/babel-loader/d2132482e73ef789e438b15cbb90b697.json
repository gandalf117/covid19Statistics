{"remainingRequest":"/home/artanis/workspace/proj-covid19/node_modules/babel-loader/lib/index.js!/home/artanis/workspace/proj-covid19/src/classes/covid19/Country.js","dependencies":[{"path":"/home/artanis/workspace/proj-covid19/src/classes/covid19/Country.js","mtime":1607284204133},{"path":"/home/artanis/workspace/proj-covid19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/artanis/workspace/proj-covid19/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL2hvbWUvYXJ0YW5pcy93b3Jrc3BhY2UvcHJvai1jb3ZpZDE5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvYXJ0YW5pcy93b3Jrc3BhY2UvcHJvai1jb3ZpZDE5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL2hvbWUvYXJ0YW5pcy93b3Jrc3BhY2UvcHJvai1jb3ZpZDE5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL2hvbWUvYXJ0YW5pcy93b3Jrc3BhY2UvcHJvai1jb3ZpZDE5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCB7IE11bHRpcGxlSXRlbXMgfSBmcm9tICdAL2NsYXNzZXMvTXVsdGlwbGVJdGVtcyc7CmltcG9ydCB7IEJhc2VTdGF0cyB9IGZyb20gJ0AvY2xhc3Nlcy9jb3ZpZDE5L0Jhc2VTdGF0cyc7Cgp2YXIgQ291bnRyeSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX011bHRpcGxlSXRlbXMpIHsKICBfaW5oZXJpdHMoQ291bnRyeSwgX011bHRpcGxlSXRlbXMpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENvdW50cnkpOwoKICBmdW5jdGlvbiBDb3VudHJ5KGpzb24pIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ291bnRyeSk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTsKICAgIF90aGlzLmlkID0ganNvbi5TbHVnOwogICAgX3RoaXMubmFtZSA9IGpzb24uQ291bnRyeTsKICAgIF90aGlzLmNvZGUgPSBqc29uLkNvdW50cnlDb2RlOwogICAgX3RoaXMubmV3U3RhdHMgPSBuZXcgQmFzZVN0YXRzKHsKICAgICAgY29uZmlybWVkOiBqc29uLk5ld0NvbmZpcm1lZCwKICAgICAgcmVjb3ZlcmVkOiBqc29uLk5ld1JlY292ZXJlZCwKICAgICAgZGVhdGhzOiBqc29uLk5ld0RlYXRocywKICAgICAgZGF0ZToganNvbi5EYXRlCiAgICB9KTsKICAgIF90aGlzLnRvdGFsU3RhdHMgPSBuZXcgQmFzZVN0YXRzKHsKICAgICAgY29uZmlybWVkOiBqc29uLlRvdGFsQ29uZmlybWVkLAogICAgICByZWNvdmVyZWQ6IGpzb24uVG90YWxSZWNvdmVyZWQsCiAgICAgIGRlYXRoczoganNvbi5Ub3RhbERlYXRocywKICAgICAgZGF0ZToganNvbi5EYXRlCiAgICB9KTsKICAgIF90aGlzLmhpc3RvcnlEYXRhID0gW107CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQ291bnRyeSwgW3sKICAgIGtleTogInNldEhpc3RvcnlEYXRhIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRIaXN0b3J5RGF0YShqc29uKSB7CiAgICAgIHRoaXMuaGlzdG9yeURhdGEgPSBCYXNlU3RhdHMuYXNJdGVtcyhqc29uLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBjb25maXJtZWQ6IGl0ZW0uQ29uZmlybWVkLAogICAgICAgICAgcmVjb3ZlcmVkOiBpdGVtLlJlY292ZXJlZCwKICAgICAgICAgIGRlYXRoczogaXRlbS5EZWF0aHMsCiAgICAgICAgICBkYXRlOiBpdGVtLkRhdGUKICAgICAgICB9OwogICAgICB9KSwgQmFzZVN0YXRzKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJhY3RpdmUiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnRvdGFsU3RhdHMuYWN0aXZlOwogICAgfQogIH0sIHsKICAgIGtleTogImNvbmZpcm1lZCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMudG90YWxTdGF0cy5jb25maXJtZWQ7CiAgICB9CiAgfSwgewogICAga2V5OiAiZGVhdGhzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy50b3RhbFN0YXRzLmRlYXRoczsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZWNvdmVyZWQiLAogICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLnRvdGFsU3RhdHMucmVjb3ZlcmVkOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIENvdW50cnk7Cn0oTXVsdGlwbGVJdGVtcyk7CgpleHBvcnQgeyBDb3VudHJ5IH07"},{"version":3,"sources":["/home/artanis/workspace/proj-covid19/src/classes/covid19/Country.js"],"names":["MultipleItems","BaseStats","Country","json","id","Slug","name","code","CountryCode","newStats","confirmed","NewConfirmed","recovered","NewRecovered","deaths","NewDeaths","date","Date","totalStats","TotalConfirmed","TotalRecovered","TotalDeaths","historyData","asItems","map","item","Confirmed","Recovered","Deaths","active"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,yBAA9B;AACA,SAASC,SAAT,QAA0B,6BAA1B;;IAEMC,O;;;;;AACF,mBAAaC,IAAb,EAAmB;AAAA;;AAAA;;AACf;AACA,UAAKC,EAAL,GAAUD,IAAI,CAACE,IAAf;AACA,UAAKC,IAAL,GAAYH,IAAI,CAACD,OAAjB;AACA,UAAKK,IAAL,GAAYJ,IAAI,CAACK,WAAjB;AACA,UAAKC,QAAL,GAAgB,IAAIR,SAAJ,CAAc;AAC1BS,MAAAA,SAAS,EAAEP,IAAI,CAACQ,YADU;AAE1BC,MAAAA,SAAS,EAAET,IAAI,CAACU,YAFU;AAG1BC,MAAAA,MAAM,EAAEX,IAAI,CAACY,SAHa;AAI1BC,MAAAA,IAAI,EAAEb,IAAI,CAACc;AAJe,KAAd,CAAhB;AAMA,UAAKC,UAAL,GAAkB,IAAIjB,SAAJ,CAAc;AAC5BS,MAAAA,SAAS,EAAEP,IAAI,CAACgB,cADY;AAE5BP,MAAAA,SAAS,EAAET,IAAI,CAACiB,cAFY;AAG5BN,MAAAA,MAAM,EAAEX,IAAI,CAACkB,WAHe;AAI5BL,MAAAA,IAAI,EAAEb,IAAI,CAACc;AAJiB,KAAd,CAAlB;AAMA,UAAKK,WAAL,GAAmB,EAAnB;AAjBe;AAkBlB;;;;mCAkBenB,I,EAAM;AAClB,WAAKmB,WAAL,GAAmBrB,SAAS,CAACsB,OAAV,CAAkBpB,IAAI,CAACqB,GAAL,CAAS,UAAAC,IAAI,EAAI;AAClD,eAAO;AACHf,UAAAA,SAAS,EAAEe,IAAI,CAACC,SADb;AAEHd,UAAAA,SAAS,EAAEa,IAAI,CAACE,SAFb;AAGHb,UAAAA,MAAM,EAAEW,IAAI,CAACG,MAHV;AAIHZ,UAAAA,IAAI,EAAES,IAAI,CAACR;AAJR,SAAP;AAMH,OAPoC,CAAlB,EAOfhB,SAPe,CAAnB;AAQH;;;wBAzBa;AACV,aAAO,KAAKiB,UAAL,CAAgBW,MAAvB;AACH;;;wBAEgB;AACb,aAAO,KAAKX,UAAL,CAAgBR,SAAvB;AACH;;;wBAEa;AACV,aAAO,KAAKQ,UAAL,CAAgBJ,MAAvB;AACH;;;wBAEgB;AACb,aAAO,KAAKI,UAAL,CAAgBN,SAAvB;AACH;;;;EAnCiBZ,a;;AAiDtB,SACIE,OADJ","sourcesContent":["import { MultipleItems } from '@/classes/MultipleItems'\nimport { BaseStats } from '@/classes/covid19/BaseStats'\n\nclass Country extends MultipleItems {\n    constructor (json) {\n        super()\n        this.id = json.Slug\n        this.name = json.Country\n        this.code = json.CountryCode\n        this.newStats = new BaseStats({\n            confirmed: json.NewConfirmed,\n            recovered: json.NewRecovered,\n            deaths: json.NewDeaths,\n            date: json.Date\n        })\n        this.totalStats = new BaseStats({\n            confirmed: json.TotalConfirmed,\n            recovered: json.TotalRecovered,\n            deaths: json.TotalDeaths,\n            date: json.Date\n        })\n        this.historyData = []\n    }\n\n    get active () {\n        return this.totalStats.active\n    }\n\n    get confirmed () {\n        return this.totalStats.confirmed\n    }\n\n    get deaths () {\n        return this.totalStats.deaths\n    }\n\n    get recovered () {\n        return this.totalStats.recovered\n    }\n\n    setHistoryData (json) {\n        this.historyData = BaseStats.asItems(json.map(item => {\n            return {\n                confirmed: item.Confirmed,\n                recovered: item.Recovered,\n                deaths: item.Deaths,\n                date: item.Date\n            }\n        }), BaseStats)\n    }\n}\n\nexport {\n    Country\n}\n"]}]}