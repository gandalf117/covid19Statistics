{"remainingRequest":"/home/artanis/workspace/proj-covid19/node_modules/babel-loader/lib/index.js!/home/artanis/workspace/proj-covid19/src/utils.js","dependencies":[{"path":"/home/artanis/workspace/proj-covid19/src/utils.js","mtime":1607192778091},{"path":"/home/artanis/workspace/proj-covid19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/artanis/workspace/proj-covid19/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnOwovKiBBIGdsb2JhbCBldmVudCBidXMgKi8KCmV4cG9ydCB2YXIgRXZlbnRCdXMgPSBuZXcgVnVlKCk7Ci8qIFRoZSBnbG9iYWwgKG1haW4pIGRhdGUgZm9ybWF0ICovCgp2YXIgZ2xvYmFsRGF0ZUZvcm1hdCA9ICdZWVlZLU1NLUREJzsKLyoqCiAqIENvbnZlcnRzIGEgZGF0ZSB0byBhIHBhcnRpY3VsYXIgZm9ybWF0IG9yIHVzZXMgdGhlIGdsb2JhbCBmb3JtYXQKICoKICogQHBhcmFtcyBkYXRlIC0gQSBzdHJpbmcgY29udGFpbmluZyB0aGUgZGF0ZSB0aGF0IG5lZWRzIHRvIGJlIGNvbnZlcnRlZAogKiBAcGFyYW1zIGRhdGVGb3JtYXQgLSBBIHN0cmluZyBjb250YWluaW5nIHRoZSBmb3JtYXQgb2YgdGhlIGRhdGUKICogaWYgbm90IGRlZmluZWQgd2lsbCBkZWZhdWx0IHRvIHRoZSBnbG9iYWwgZm9ybWF0CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGRhdGVUaW1lRm9ybWF0KGRhdGUpIHsKICB2YXIgZGF0ZUZvcm1hdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZ2xvYmFsRGF0ZUZvcm1hdDsKICByZXR1cm4gbW9tZW50KGRhdGUpLmZvcm1hdChkYXRlRm9ybWF0KTsKfQovKioKICogR2VuZXJhdGVzIGEgcmFuZG9tIGludGVnZXIgYmV0d2VlbiBtaW4gKGluY2x1ZGVkKSBhbmQgbWF4IChleGNsdWRlZCkKICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7CiAgbWluID0gTWF0aC5jZWlsKG1pbik7CiAgbWF4ID0gTWF0aC5mbG9vcihtYXgpOwogIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7Cn0KLyoqCiAqIFRoZSBpZGVhIG9mIHRoaXMgZnVuY2l0b24gaXMgdG8gcmV0dXJuIGEgcHJvbWlzZSB0aGF0IGdldHMgcmVzb2x2ZWQgaW4gYSBnaXZlbiB0aW1lLgogKiBUaGlzIHByb21pc2Ugc2hvdWxkIGJlIHVzZWQgYWxvbmcgd2l0aCBhbm90aGVyIHByb21pc2Ugc28gdGhhdCBldmVuIGlmIHRoZSBvdGhlciBwcm9taXNlCiAqIGVuZHMgZmlyc3QgaXQgd2lsbCBzdGlsbCB3YWl0IGZvciB0aGlzIG9uZS4gSXQgbWF5IHNsb3cgZG93biB0aGUgdXNlciBleHBlcmllbmNlIHNvbWUKICogbWlsaXNlY29uZHMgYnV0IHdpbGwgcmVzdWx0IGluIGEgbmljZSBlZmZlY3QuIEl0cyBzb2xlIHB1cnBvc2UgaXMgZWZmZWN0IQogKiAKICogQHBhcmFtcyBsb2FkZXJUaW1lIC0gYW4gaW50ZWdlciB0aGF0IHJlcHJlc2VudHMgdGhlIHRpbWUgZm9yIHdoaWNoIHRoZSBwcm9taXNlIHdpbGwKICogYmUgcmVzb2x2ZSBpbiBtaWxpc2Vjb25kcwogKi8KCmV4cG9ydCBmdW5jdGlvbiBnZXRMb2FkZXJQcm9taXNlKCkgewogIHZhciBsb2FkZXJUaW1lID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAwOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIGxvYWRlclRpbWUpOwogIH0pOwp9"},{"version":3,"sources":["/home/artanis/workspace/proj-covid19/src/utils.js"],"names":["Vue","moment","EventBus","globalDateFormat","dateTimeFormat","date","dateFormat","format","getRandomInt","min","max","Math","ceil","floor","random","getLoaderPromise","loaderTime","Promise","resolve","reject","setTimeout"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,IAAIF,GAAJ,EAAjB;AAEP;;AACA,IAAMG,gBAAgB,GAAG,YAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAyBC,IAAzB,EAA8D;AAAA,MAA/BC,UAA+B,uEAAlBH,gBAAkB;AACnE,SAAOF,MAAM,CAACI,IAAD,CAAN,CAAaE,MAAb,CAAoBD,UAApB,CAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASE,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AACrCD,EAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,SAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,gBAAT,GAA2C;AAAA,MAAhBC,UAAgB,uEAAH,CAAG;AAChD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAACF,OAAD,EAAUF,UAAV,CAAV;AACD,GAFM,CAAP;AAGD","sourcesContent":["import Vue from 'vue'\nimport moment from 'moment'\n\n/* A global event bus */\nexport const EventBus = new Vue()\n\n/* The global (main) date format */\nconst globalDateFormat = 'YYYY-MM-DD'\n\n/**\n * Converts a date to a particular format or uses the global format\n *\n * @params date - A string containing the date that needs to be converted\n * @params dateFormat - A string containing the format of the date\n * if not defined will default to the global format\n */\nexport function dateTimeFormat (date, dateFormat = globalDateFormat) {\n  return moment(date).format(dateFormat)\n}\n\n/**\n * Generates a random integer between min (included) and max (excluded)\n */\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min) + min)\n}\n\n/**\n * The idea of this funciton is to return a promise that gets resolved in a given time.\n * This promise should be used along with another promise so that even if the other promise\n * ends first it will still wait for this one. It may slow down the user experience some\n * miliseconds but will result in a nice effect. Its sole purpose is effect!\n * \n * @params loaderTime - an integer that represents the time for which the promise will\n * be resolve in miliseconds\n */\nexport function getLoaderPromise (loaderTime = 0) {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, loaderTime)\n  })\n}\n"]}]}